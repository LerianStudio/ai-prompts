workflow:
  id: implement-subtask
  name: Automated Sub-task Implementation
  description: >-
    Takes a sub-task from 02.ready, implements all todos automatically using specialized agents,
    tracks progress with TodoWrite, and moves through board states (ready → in-progress → completed).

  agents:
    - general-purpose
    - todo-manager

  steps:
    - id: load-and-move-subtask
      title: Load Sub-task Todos and Move to In-Progress
      agent: todo-manager
      requires: 02.ready/[task]/[sub-task]/todos.md
      creates: 03.in-progress/[task]/[sub-task]
      action: MOVE from 02.ready to 03.in-progress (removes original)

    - id: implement-todos-sequentially
      title: Implement All Todos One by One
      agent: general-purpose
      requires: 03.in-progress/[task]/[sub-task]/todos.md
      creates: implemented-todos-with-code

    - id: finalize-and-move-completed
      title: Update Final Progress and Move to Completed
      agent: todo-manager
      requires: implemented-todos-with-code
      creates: 05.completed/[task]/[sub-task]
      action: MOVE from 03.in-progress to 05.completed (removes original)

handoff_prompts:
  todo-manager-to-general-purpose: >-
    I've loaded the sub-task todos and MOVED (not copied) the folder from 02.ready to 03.in-progress. 
    The original folder has been removed from 02.ready. The todos have been loaded into TodoWrite 
    for active management during implementation.

    Sub-task details:
    - Location: 03.in-progress/[task]/[sub-task]/
    - Original location REMOVED: 02.ready/[task]/[sub-task]/ ✅
    - Total todos: {total_todos}
    - Ready for implementation: {pending_todos}

    Your task: Implement all todos sequentially using TodoWrite to track progress:
    1. Mark each todo as "in_progress" when you start working on it
    2. Implement the actual code, create files, add functionality
    3. Mark todo as "completed" when implementation is finished
    4. Continue to next todo until all are implemented

    Use Read tool to understand requirements, Write/Edit tools to create code, and TodoWrite 
    to manage progress. Focus on creating working, production-ready implementations.

    CRITICAL: Ensure all steps use MOVE operations (mv command), not COPY operations (cp command).

  general-purpose-to-todo-manager: >-
    I have completed implementing all todos in the sub-task. All code has been written, files created,
    and functionality implemented. TodoWrite shows all todos as completed.

    Implementation summary:
    {implementation_summary}

    Please finalize the sub-task by:
    1. Updating the todos.md file with final completed status
    2. MOVING (not copying) the sub-task from 03.in-progress to 05.completed using mv command
    3. VERIFY the original folder is REMOVED from 03.in-progress after the move
    4. Clean up TodoWrite state for this sub-task

    CRITICAL: Use mv command to ensure proper MOVE operation, then verify removal from source location.

  workflow-completion: >-
    Sub-task implementation workflow completed successfully!

    Summary of automated implementation:
    - Loaded sub-task todos directly from files using Read tool
    - MOVED (not copied) sub-task through board states: 02.ready → 03.in-progress → 05.completed
    - Verified original folders are REMOVED from previous locations after each move
    - Implemented all todos with TodoWrite progress tracking
    - Created working code and functionality for all requirements
    - Updated todos.md files with completion status

    The sub-task is now fully implemented and properly moved to the completed board!

    VERIFICATION: Sub-task exists ONLY in 05.completed/ (removed from 02.ready/ and 03.in-progress/)
