workflow:
  id: ui-subtask
  name: UI-Only Implementation with Visual Validation (Frontend Phase 1)
  description: >-
    Takes a UI sub-task from 02.ready, implements UI components without business logic using frontend-developer,
    focuses on pure visual components, styling, and basic interactions, tracks progress with TodoWrite,
    and moves through board states (ready → in-progress → completed). Phase 1 of two-phase frontend approach.

  agents:
    - todo-manager
    - frontend-developer
    - playwright-validator

  steps:
    - id: load-and-move-ui-subtask
      title: Load UI Sub-task Todos and Move to In-Progress
      agent: todo-manager
      requires: protocol-assets/shared/board/02.ready/[task]/ui-task-[N]/todos.md
      creates: protocol-assets/shared/board/03.done/[task]/ui-task-[N]
      action: MOVE from protocol-assets/shared/board/02.ready to protocol-assets/shared/board/03.done (removes original)
      description: >-
        Load UI-specific todos from ready phase and move task folder to in-progress board.
        Initialize TodoWrite with UI implementation tasks focused on visual components,
        styling, interactions, and user experience.

    - id: implement-ui-only-todos
      title: Implement UI-Only Todos (Visual Components, Styling, Basic Interactions)
      agent: frontend-developer
      requires:
        - protocol-assets/shared/board/03.done/[task]/ui-task-[N]/todos.md
        - protocol-assets/shared/board/03.done/[task]/ui-spec.md (reference design)
      creates:
        - ui-component-implementations
        - styling-implementations
        - basic-interaction-code
      description: >-
        Implement UI todos sequentially focusing ONLY on visual presentation:
        - UI component structure and markup
        - CSS/Tailwind styling and responsive design
        - Basic interactions (hover, focus, click handlers without business logic)
        - Accessibility implementation (ARIA, semantic HTML)
        - Visual validation against design specifications
        - NO business logic, API integration, or state management

    - id: playwright-validation
      title: Simple Playwright Screenshot Validation
      agent: playwright-validator
      requires:
        - ui-implementation-code
        - protocol-assets/shared/board/03.done/[task]/ui-spec.md
      creates:
        - playwright-screenshots
      description: >-
        Use Playwright MCP to take screenshots of implementation.
        Compare against design specs for basic visual validation.
        Focus on desktop functionality only.

    - id: finalize-and-move-ui-completed
      title: Update Final UI Progress and Move to Completed
      agent: todo-manager
      requires:
        - ui-implementation-code
        - playwright-screenshots
      creates: protocol-assets/shared/board/03.done/[task]/ui-task-[N]
      action: MOVE from protocol-assets/shared/board/03.done to protocol-assets/shared/board/03.done (removes original)
      description: >-
        Update todos.md with completion status and move to completed board.

handoff_prompts:
  todo-manager-to-frontend-developer: >-
    I've loaded the UI sub-task todos and MOVED (not copied) the folder from 02.ready to 03.done. 
    The original folder has been removed from 02.ready. The UI-specific todos have been loaded into TodoWrite 
    for active management during UI implementation.

    UI Sub-task details:
    - Location: protocol-assets/shared/board/03.done/[task]/ui-task-[N]/
    - Original location REMOVED: protocol-assets/shared/board/02.ready/[task]/ui-task-[N]/ ✅
    - UI Design Reference: protocol-assets/shared/board/03.done/[task]/ui-spec.md
    - Total UI todos: {total_ui_todos}
    - Ready for UI implementation: {pending_ui_todos}

    Your task: Implement all UI todos sequentially with visual validation using TodoWrite to track progress:
    1. Mark each UI todo as "in_progress" when you start working on it
    2. Implement UI components, styling, interactions, and visual elements
    3. For complex visual components, integrate ui-first-development workflow for pixel-perfect validation
    4. Use reference designs from ui-spec.md to ensure visual fidelity
    5. Mark todo as "completed" when UI implementation is finished and visually validated
    6. Continue to next UI todo until all are implemented

    Focus on creating pixel-perfect, accessible, responsive UI implementations that match the design specifications.

    CRITICAL: Ensure all steps use MOVE operations (mv command), not COPY operations (cp command).

  frontend-developer-to-playwright-validator: >
    I've completed implementing all UI-only todos focusing purely on visual presentation.
    No business logic, API integration, or state management has been implemented - only pure UI.

    **UI-Only Implementation Summary:**
    - UI Components: {ui_component_implementations_summary}
    - Styling: {styling_implementations_summary}
    - Basic Interactions: {basic_interactions_summary}
    - Accessibility: {accessibility_implementations_summary}

    Please use Playwright MCP to validate the UI-only implementation:
    1. Take screenshots of implemented UI components
    2. Compare visual presentation against ui-spec.md
    3. Verify basic interactions work (hover, focus, click - no business logic)
    4. Focus on desktop functionality and visual correctness
    5. Confirm NO business logic is present - pure UI only

    Keep validation simple - verify UI looks correct and basic interactions respond.

  playwright-validator-to-todo-manager: >
    Simple Playwright validation completed using MCP tools.

    - Took desktop screenshots of implemented components
    - Verified basic visual correctness against design specs
    - Confirmed functional interactions work properly

    Please finalize the task and move to completed board.

  workflow-completion: >-
    UI-Only Sub-task implementation workflow completed successfully! (Phase 1 of 2)

    Summary of Phase 1 UI-only implementation:
    - Loaded UI sub-task todos directly from files using Read tool
    - MOVED (not copied) UI sub-task through board states: protocol-assets/shared/board/02.ready → protocol-assets/shared/board/03.done → protocol-assets/shared/board/03.done
    - Verified original folders are REMOVED from previous locations after each move
    - Implemented all UI-only todos with TodoWrite progress tracking
    - Created pixel-perfect, accessible, responsive UI components (NO business logic)
    - Focused purely on visual presentation, styling, and basic interactions
    - Performed visual validation using Playwright MCP tools
    - Updated todos.md files with UI-only completion status

    **Phase 1 Completion Verification:**
    - UI sub-task exists ONLY in protocol-assets/shared/board/03.done/
    - UI components implemented with NO business logic ✅
    - Visual presentation matches design specifications ✅
    - Basic interactions functional (no business logic) ✅
    - Ready for Phase 2 logic integration ✅

    **Next Phase:** The completed UI-only implementation is ready for Phase 2 logic integration
    through ui-logic-subtask workflow, which will connect business logic to these pure UI components
    while maintaining the established visual presentation and component structure.
